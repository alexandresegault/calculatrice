[{"C:\\Users\\alexa\\Desktop\\WildCodeSchool\\train\\calculatrice\\src\\index.js":"1","C:\\Users\\alexa\\Desktop\\WildCodeSchool\\train\\calculatrice\\src\\App.js":"2","C:\\Users\\alexa\\Desktop\\WildCodeSchool\\train\\calculatrice\\src\\Components\\Calculatrice.js":"3"},{"size":219,"mtime":1611772077105,"results":"4","hashOfConfig":"5"},{"size":190,"mtime":1611773523081,"results":"6","hashOfConfig":"5"},{"size":3099,"mtime":1612568299900,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"4yt7l7",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\alexa\\Desktop\\WildCodeSchool\\train\\calculatrice\\src\\index.js",[],["16","17"],"C:\\Users\\alexa\\Desktop\\WildCodeSchool\\train\\calculatrice\\src\\App.js",[],"C:\\Users\\alexa\\Desktop\\WildCodeSchool\\train\\calculatrice\\src\\Components\\Calculatrice.js",["18","19"],"import React, { Component } from \"react\";\r\nimport \"./Calculatrice.css\";\r\n\r\nclass Calculatrice extends Component {\r\n  state = {\r\n    count: \"0\"\r\n  };\r\n  reset = () => {\r\n    const { count } = this.state;\r\n    this.setState({\r\n      count: \"0\"\r\n    });\r\n  };\r\n  addDot = () => {\r\n    const { count } = this.state;\r\n\r\n    this.setState({\r\n      count: count + \".\"\r\n    });\r\n  };\r\n  handle = digit => {\r\n    const { count } = this.state;\r\n    this.setState({\r\n      count: count === \"0\" ? String(digit) : count + digit\r\n    });\r\n  };\r\n\r\n  calc = () => {\r\n    const { count } = this.state;\r\n    this.setState({\r\n      count: (eval(count) * 100) / 100\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"calculatrice\">\r\n        <input id=\"result\" value={this.state.count} />\r\n        <div id=\"btns\">\r\n          <div id=\"number-container\">\r\n            <button className=\"number\" onClick={() => this.handle(1)}>\r\n              1\r\n            </button>\r\n            <button className=\"number\" onClick={() => this.handle(2)}>\r\n              2\r\n            </button>\r\n            <button className=\"number\" onClick={() => this.handle(3)}>\r\n              3\r\n            </button>\r\n            <button className=\"number\" onClick={() => this.handle(4)}>\r\n              4\r\n            </button>\r\n            <button className=\"number\" onClick={() => this.handle(5)}>\r\n              5\r\n            </button>\r\n            <button className=\"number\" onClick={() => this.handle(6)}>\r\n              6\r\n            </button>\r\n            <button className=\"number\" onClick={() => this.handle(7)}>\r\n              7\r\n            </button>\r\n            <button className=\"number\" onClick={() => this.handle(8)}>\r\n              8\r\n            </button>\r\n            <button className=\"number\" onClick={() => this.handle(9)}>\r\n              9\r\n            </button>\r\n            <button className=\"number\" id=\"zero\" onClick={() => this.handle(0)}>\r\n              0\r\n            </button>\r\n          </div>\r\n          <div id=\"operator-container\">\r\n            <button className=\"operator\" onClick={() => this.handle(\"+\")}>\r\n              +\r\n            </button>\r\n            <button className=\"operator\" onClick={() => this.handle(\"-\")}>\r\n              -\r\n            </button>\r\n\r\n            <button className=\"operator\" onClick={() => this.handle(\"*\")}>\r\n              *\r\n            </button>\r\n            <button className=\"operator\" onClick={() => this.handle(\"/\")}>\r\n              &divide;\r\n            </button>\r\n            <button className=\"operator\" onClick={() => this.handle(\"%\")}>\r\n              %\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"special-container\">\r\n          <button className=\"operator\" onClick={() => this.calc()}>\r\n            =\r\n          </button>\r\n          <button className=\"operator\" onClick={() => this.reset()}>\r\n            C\r\n          </button>\r\n          <button className=\"operator\" onClick={() => this.addDot()}>\r\n            .\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Calculatrice;\r\n",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":9,"column":13,"nodeType":"26","messageId":"27","endLine":9,"endColumn":18},{"ruleId":"28","severity":1,"message":"29","line":31,"column":15,"nodeType":"30","messageId":"31","endLine":31,"endColumn":19},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'count' is assigned a value but never used.","Identifier","unusedVar","no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]